Directives are used to create,manipulate,update elements in DOM Dynamically
Directives are three types
1. structural Directives
2. property Directives
3. custom Directives
1.Structural Directives : these directives are used to create, manipulate structire of DOM elements in a component
 There are three known structural directives
 i. ngIf:
 for angular 17:
 @if (a > b) {
  {{a}} is greater than {{b}}
} @else if (b > a) {
  {{a}} is less than {{b}}
} @else {
  {{a}} is equal to {{b}}
}
ii.ngSwitch
<!-- <h1>App Component</h1>
<div *ngIf="isLogin ;then thenCase else elseCase">
  
</div>
<ng-template #thenCase>
  You are logged in as {{name}}, <button>Logout</button>
</ng-template>
<ng-template #elseCase>
  You are not logged in , please login <button>Login</button>
</ng-template>

<div [ngSwitch]="day">
   <p *ngSwitchCase="0">Sunday</p>
  <p *ngSwitchCase="1">Monday</p>
  <p *ngSwitchCase="2">Tuesday</p>
  <p *ngSwitchCase="3">Wednesday</p>
  <p *ngSwitchCase="4">Thursday</p>
  <p *ngSwitchCase="5">Friday</p>
  <p *ngSwitchCase="6">Saturday</p>
  <p *ngSwitchDefault> Please Enter proper value(0-6)</p>
</div>

 -->

 iii.ngFor
 you can ngFor for the iterative DOM elements
if arr=[2,3,5,6]
 <div *ngFor="let i of arr">
 {{i}}
 </div>












 















<div id="main">
  <button (click)="login()">Login</button>
  <div *ngIf="isLogin" id="switchBox">
      <input type="number" [(ngModel)]="day"><button (click)="click()">ðŸ˜’</button>
      <div [ngSwitch]="day2">
        <p *ngSwitchCase="0">Sunday</p>
        <p *ngSwitchCase="1">Monday</p>
        <p *ngSwitchCase="2">Tuesday</p>
        <p *ngSwitchCase="3">Wednesday</p>
        <p *ngSwitchCase="4">Thursday</p>
        <p *ngSwitchCase="5">Friday</p>
        <p *ngSwitchCase="6">Saturday</p>
        <p *ngSwitchDefault> Please Enter proper value(0-6)</p>
      </div>
  </div>
</div>






